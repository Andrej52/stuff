import math
import time

prierezy=[0.007853981633974483, 0.031415926535897934, 0.07068583470577035, 0.12566370614359174, 0.19634954084936207,
        0.2827433388230814, 0.3848451000647496, 0.5026548245743669, 0.6361725123519332, 0.7853981633974483, 0.9503317777109126,
        1.1309733552923256, 1.3273228961416876, 1.5393804002589984, 1.7671458676442586, 2.0106192982974678, 2.269800692218625, 
        2.5446900494077327, 2.8352873698647882, 3.141592653589793, 3.463605900582747, 3.8013271108436504, 4.1547562843725006, 
        4.523893421169302, 4.908738521234052, 5.3092915845667505, 5.725552611167399, 6.157521601035993, 6.60519855417254, 
        7.0685834705770345, 7.547676350249479, 8.042477193189871, 8.55298599939821, 9.0792027688745, 9.62112750161874, 
        10.17876019763093, 10.752100856911069, 11.341149479459153, 11.945906065275187, 12.566370614359172, 13.202543126711104, 
        13.854423602330987, 14.522012041218817, 15.205308443374602, 15.904312808798327, 16.619025137490002, 17.349445429449634, 18.09557368467721, 
        18.857409903172737, 19.634954084936208, 20.42820622996763, 21.237166338267002, 22.061834409834322, 22.902210444669596, 23.75829444277281, 
        24.630086404143974, 25.517586328783096, 26.42079421669016, 27.339710067865177, 28.274333882308138, 29.224665660019046, 30.190705400997917, 
        31.17245310524472, 32.169908772759484, 33.18307240354219, 34.21194399759284, 35.25652355491145, 36.316811075498, 37.392806559352515, 38.48451000647496, 
        39.59192141686537, 40.71504079052372, 41.85386812745002, 43.008403427644275, 44.178646691106465, 45.36459791783661, 46.566257107834716, 47.78362426110075, 
        49.01669937763475, 50.26548245743669, 51.52997350050658, 52.81017250684442, 54.106079476450226, 55.41769440932395, 56.74501730546564, 58.08804816487527, 
        59.44678698755285, 60.821233773498406, 62.211388522711886, 63.61725123519331, 65.03882191094269, 66.47610054996001, 67.9290871522453, 69.39778171779854, 
        70.8821842466197, 72.38229473870884, 73.8981131940659, 75.42963961269095, 76.97687399458391, 78.53981633974483]
zatazenia=[0.05105088062083414, 0.20420352248333656, 0.45945792558750725,
             0.8168140899333463, 1.2762720155208536, 1.837831702350029, 
             2.501493150420872, 3.267256359733385, 4.135121330287566,
              5.105088062083414, 6.1771565551209315, 7.351326809400116, 
              8.62759882492097, 10.005972601683489, 11.486448139687681, 
              13.06902543893354, 14.753704499421064, 16.540485321150264, 
              18.429367904121122, 20.420352248333657, 22.513438353787855, 
              24.708626220483726, 27.005915848421253, 29.405307237600464,
               31.906800388021338, 34.51039529968388, 37.216091972588096, 
               40.023890406733955, 42.93379060212151, 45.945792558750725, 
               49.059896276621615, 52.27610175573416, 55.59440899608836, 
               59.014817997684254, 62.53732876052182, 66.16194128460106,
                69.88865556992195, 73.71747161648449, 77.64838942428871,
                81.68140899333463, 85.81653032362217, 90.05375341515142, 
                94.3930782679223, 98.8345048819349, 103.37803325718913,
                108.02366339368501, 112.77139529142262, 117.62122895040186,
                122.57316437062279, 127.62720155208535, 132.78334049478957, 
                138.0415811987355, 143.4019236639231, 148.86436789035238, 154.42891387802328,
                160.09556162693582, 165.8643111370901, 171.73516240848605, 177.70811544112365, 
                183.7831702350029, 189.9603267901238, 196.23958510648646, 202.6209451840907, 209.10440702293664, 
                215.68997062302424, 222.37763598435345, 229.16740310692444, 236.05927199073702, 243.05324263579135,
                250.14931504208727, 257.3474892096249, 264.6477651384042, 272.0501428284251, 279.5546222796878, 287.16120349219204,
                294.86988646593795, 302.68067120092564, 310.59355769715484, 318.60854595462587, 326.7256359733385, 334.94482775329277, 
                343.2661212944887, 351.68951659692647, 360.2150136606057, 368.8426124855266, 377.5723130716892, 386.4041154190935, 395.3380195277396,
                404.37402539762724, 413.5121330287565, 422.7523424211275, 432.09465357474005, 441.53906648959446, 451.0855811656905, 460.73419760302806, 
                470.4849158016074, 480.33773576142835, 490.29265748249117, 500.3496809647954, 510.5088062083414]
vodice=[0.5,0.75,1,1.5,2.5,4,6,10,16,25,35,50]
rArr=[]
p= math.pi
hustota=6.5

def resistance():
    odpor=(input("Zvolte si odpor:  ohmov zakon(n)/ seriovy(s)/ parallelny(p) \n"))
    odpor.lower()
    if odpor=="n":
        u=int(input("Napatie: "))
        i=float(input("Prúd: "))
        R=u/i
    elif odpor=="s":
        rNum=int(input("Zvolte počet odporov:"))
        for o in range(rNum):
                r=int(input(f"""zvolte R{o}: """))
                rArr.append(r)
                R=R+rArr[o]
    elif odpor=="p":
        for o in range(2):
            r=int(input(f"""zvolte R{o}: """))
            rArr.append(r)
        for x in range(len(rArr)):
            sr=sr+rArr[x]
            pr=pr*rArr[x]
            R=sr/pr
    else:
        print("zadajte hodnoty znova")
    print(f"""
            Odpor je: {round(R,3)} OHM
            """)

         
def check_value():
    vodic=odber/hustota
    for i in range(len(prierezy)):
        if prierezy[i-1]<vodic and prierezy[i]>vodic:
            arr1=prierezy[i]
    for x in range(len(zatazenia)):
        if zatazenia[x-1]<odber and zatazenia[x]>odber:
            arr2=zatazenia[x]
    difference = lambda vodice : (vodice - arr1)
 
    res = min(vodice, key=difference)

    print(f"""
            hodnoty pri prudovej hustote 6.5A/mm2
            Vhodný vodic je : {arr1} mm2
            Zatazenie: {round(arr2,3)} A
            """)
    print(f"""
            Standarnté hodnoty vhodneho:   
            vodica: {res} mm2
            pri:
            Odbere: {round(arr2,3)} A
            """)

while True:
    volba=(input("Zvolte si akciu: vypocet preriezu a I zatazitelnsoti (P)/ vykonu,napatia a prudu (IPU) /Odporu (R) alebo ukoncite program (E): \n"))
    volba.lower()
    if volba== "p":
        d=float(input("Zadaj priemer vodiča (mm):"))
        prierez= p*(d/2)**2
        zatazenie=prierez*hustota 
        print(f"""
                polomer vodiča je : {d/2}  mm     
                priemer vodiča je : {d}  mm 
                prierez vodiča={round(prierez,3)}  mm2
            """)
        check_value()
    elif volba=="ipu":
        u=int(input("Napatie: "))
        p=int(input("Výkon: "))
        i=float(input("Prúd: "))

        if ((i ==0 and u==0) or (i==0 and p==0) or (p==0 and u==0 )):
                print("zadajte aspoň 2 premenné!")
        else:    
            if i==0:
                    odber= (p/u) + 0.1
                    print(f"""
                        Napatie: {u} V
                        Výkon: {p} W 
                        Odber: {round(odber,2)} A
                        """)
                    check_value()
            elif i!=0 and u==0:
                u=p/i
                print(f"""
                    Napatie: {u} V
                    Výkon: {p} W 
                    Prúd: {round(i,2)} A
                    """)
                odber=i+0.1
                check_value()
            elif i!=0:
                    p=u*i

                    print(f"""
                        Napatie: {u} V
                        Výkon: {p} W 
                        Prúd: {round(i,2)} A
                            """)
                    odber=i+0.1
                    check_value()
    elif volba =="r":
        resistance()
    elif volba =="e":
        print("Program sa Ukončuje....")
        time.sleep(5)
        break
    else:
        print("zvolte hodnotu  (P),(IPU) alebo (E)")
print("program bol ukončený")